{"componentChunkName":"component---src-components-lectures-template-tsx-content-file-path-posts-lectures-2025-fall-algorithms-md","path":"/lectures/dd3e34c0-95e2-5900-824d-6a16a896d2cd/","result":{"data":{"lecture":{"frontmatter":{"code":"4471016","title":"알고리즘 / Algorithms","year":2025,"semester":"fall","division":"2 Div.","description":"This course introduces fundamental concepts and theories to design and analyze computer algorithms that are widely employed in computer science. Throughout the course, we will cover divide-and-conquer, dynamic programming, greedy algorithms, backtracking, branch-and-bound, genetic algorithms, and NP theory."},"tableOfContents":{"items":[{"url":"#instruction","title":"Instruction","items":[{"url":"#course-staff","title":"Course Staff"},{"url":"#time--location","title":"Time & Location"},{"url":"#office-hours","title":"Office Hours"},{"url":"#textbook","title":"Textbook"},{"url":"#prerequisite","title":"Prerequisite"},{"url":"#grading-policy","title":"Grading Policy","items":[{"url":"#exam-70","title":"Exam (70%)"},{"url":"#rank-at-the-online-judge-20","title":"Rank at the Online Judge (20%)"},{"url":"#attendance-10","title":"Attendance (10%)"}]}]},{"url":"#schedule","title":"Schedule","items":[{"url":"#week-01","title":"Week 01","items":[{"url":"#september-01--course-overview--logistics","title":"September 01 — Course Overview & Logistics"},{"url":"#september-04--efficiency-analysis-order-algorithm-description--sequential-search-vs-binary-search","title":"September 04 — Efficiency, Analysis, Order: Algorithm Description & Sequential Search vs. Binary Search"}]},{"url":"#week-02","title":"Week 02","items":[{"url":"#september-08--efficiency-analysis-order-fibonacci-numbers--algorithm-analysis","title":"September 08 — Efficiency, Analysis, Order: Fibonacci Numbers & Algorithm Analysis"},{"url":"#september-11--efficiency-analysis-order-order","title":"September 11 — Efficiency, Analysis, Order: Order"}]},{"url":"#week-03","title":"Week 03","items":[{"url":"#september-15--divide--conquer-binary-search--merge-sort","title":"September 15 — Divide & Conquer: Binary Search & Merge Sort"},{"url":"#september-18","title":"September 18:"}]},{"url":"#week-04","title":"Week 04","items":[{"url":"#september-22--divide--conquer-solution-of-recurrence-relation","title":"September 22 — Divide & Conquer: Solution of Recurrence Relation"},{"url":"#september-25--divide--conquer-quick-sort","title":"September 25 — Divide & Conquer: Quick Sort"}]},{"url":"#week-05","title":"Week 05","items":[{"url":"#september-29--divide--conquer-matrix-multiplication--asymptotic-complexity-of-recurrence-relation","title":"September 29 — Divide & Conquer: Matrix Multiplication & Asymptotic Complexity of Recurrence Relation"},{"url":"#october-02--dynamic-programming-binomial-coefficient","title":"October 02 — Dynamic Programming: Binomial Coefficient"}]},{"url":"#week-06","title":"Week 06","items":[{"url":"#october-06--chuseok-holiday","title":"October 06 — Chuseok Holiday"},{"url":"#october-09--hangul-day","title":"October 09 — Hangul day"}]},{"url":"#week-07","title":"Week 07","items":[{"url":"#october-13--dynamic-programming-longest-common-subsequence--matrix-chain-multiplication","title":"October 13 — Dynamic Programming: Longest Common Subsequence & Matrix-Chain Multiplication"},{"url":"#october-16--dynamic-programming-minimum-edit-distance-problem--all-pairs-shortest-path-problem","title":"October 16 — Dynamic Programming: Minimum Edit Distance Problem & All-Pairs Shortest Path Problem"}]},{"url":"#week-08","title":"Week 08","items":[{"url":"#october-20","title":"October 20"},{"url":"#october-23--midterm-exam","title":"October 23 — Midterm Exam"}]},{"url":"#week-09","title":"Week 09","items":[{"url":"#october-27--midterm-exam-recitation","title":"October 27 — Midterm Exam Recitation"},{"url":"#october-30--dynamic-programming-traveling-salesman-problem--knapsack-problem","title":"October 30 — Dynamic Programming: Traveling Salesman Problem & Knapsack Problem"}]},{"url":"#week-10","title":"Week 10","items":[{"url":"#november-03--greedy-algorithm-single-source-shortest-path-problem","title":"November 03 — Greedy Algorithm: Single-Source Shortest Path Problem"},{"url":"#november-06--greedy-algorithm-prims-minimum-spanning-tree","title":"November 06 — Greedy Algorithm: Prim's Minimum Spanning Tree"}]},{"url":"#week-11","title":"Week 11","items":[{"url":"#november-10--greedy-algorithm-kruskals-minimum-spanning-tree","title":"November 10 — Greedy Algorithm: Kruskal's Minimum Spanning Tree"},{"url":"#november-13--greedy-algorithm-huffman-code","title":"November 13 — Greedy Algorithm: Huffman Code"}]},{"url":"#week-12","title":"Week 12","items":[{"url":"#november-17--backtracking-n-queen-problem","title":"November 17 — Backtracking: n-Queen Problem"},{"url":"#november-20--backtracking-monte-carlo-method--graph-coloring","title":"November 20 — Backtracking: Monte-Carlo Method & Graph Coloring"}]},{"url":"#week-13","title":"Week 13","items":[{"url":"#november-24--backtracking-traveling-salesman-problem--knapsack-problem","title":"November 24 — Backtracking: Traveling Salesman Problem & Knapsack Problem"},{"url":"#november-27--branch-and-bound-knapsack-problem","title":"November 27 — Branch-and-Bound: Knapsack Problem"}]},{"url":"#week-14","title":"Week 14","items":[{"url":"#december-01--branch-and-bound-traveling-salesman-problem--abductive-inference","title":"December 01 — Branch-and-Bound: Traveling Salesman Problem & Abductive Inference"},{"url":"#december-04--np-theory-basics","title":"December 04 — NP Theory: Basics"}]},{"url":"#week-15","title":"Week 15","items":[{"url":"#december-08--np-theory-np-problems","title":"December 08 — NP Theory: NP Problems"},{"url":"#december-11--evolutionary-computation","title":"December 11 — Evolutionary Computation"}]},{"url":"#week-16","title":"Week 16","items":[{"url":"#december-15--final-exam","title":"December 15 — Final Exam"},{"url":"#december-18--final-exam-recitation--final-remark","title":"December 18 — Final Exam Recitation & Final Remark"}]}]}]}}},"pageContext":{"id":"dd3e34c0-95e2-5900-824d-6a16a896d2cd","frontmatter":{"code":"4471016","title":"알고리즘 / Algorithms","year":2025,"semester":"fall","division":"2 Div.","description":"This course introduces fundamental concepts and theories to design and analyze computer algorithms that are widely employed in computer science. Throughout the course, we will cover divide-and-conquer, dynamic programming, greedy algorithms, backtracking, branch-and-bound, genetic algorithms, and NP theory."}}},"staticQueryHashes":["3751811173","892254660"],"slicesMap":{}}