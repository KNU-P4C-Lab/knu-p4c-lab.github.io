{"componentChunkName":"component---src-components-lectures-template-tsx-content-file-path-posts-lectures-2024-fall-algorithms-md","path":"/lectures/a9e4bbfb-3451-5a1d-8899-359f9a575624/","result":{"data":{"lecture":{"frontmatter":{"code":"4471016","title":"알고리즘 / Algorithms","year":2024,"semester":"fall","division":"3분반","description":"This course introduces fundamental concepts and theories to design and analyze computer algorithms that are widely employed in computer science. Throughout the course, we will cover divide-and-conquer, dynamic programming, greedy algorithms, backtracking, branch-and-bound, genetic algorithms, and NP theory."},"tableOfContents":{"items":[{"url":"#instruction","title":"Instruction","items":[{"url":"#course-staff","title":"Course Staff"},{"url":"#time--location","title":"Time & Location"},{"url":"#office-hours","title":"Office Hours"},{"url":"#textbook","title":"Textbook"},{"url":"#prerequisite","title":"Prerequisite"},{"url":"#grading-policy","title":"Grading Policy"}]},{"url":"#schedule","title":"Schedule","items":[{"url":"#w01-overview","title":"W01: Overview","items":[{"url":"#september-02-course-overview--logistics","title":"September 02: Course Overview & Logistics"},{"url":"#september-05-algorithm-description--efficiency","title":"September 05: Algorithm Description & Efficiency"}]},{"url":"#w02-algorithm-analysis--order--divide--conquer","title":"W02: Algorithm Analysis & Order / Divide & Conquer","items":[{"url":"#september-09-algorithm-analysis--order","title":"September 09: Algorithm Analysis & Order"},{"url":"#september-12-divide--conquer-basics--binary-search--merge-sort","title":"September 12: Divide & Conquer Basics / Binary Search / Merge Sort"}]},{"url":"#w03-divide--conquer","title":"W03: Divide & Conquer","items":[{"url":"#september-16-chuseok-holiday","title":"September 16: Chuseok Holiday"},{"url":"#september-19-recurrence-relation---general-solution","title":"September 19: Recurrence Relation - General Solution"}]},{"url":"#w04-divide--conquer","title":"W04: Divide & Conquer","items":[{"url":"#september-23-recurrence-relation---asymptotic-complexity--large-integer-multiplication","title":"September 23: Recurrence Relation - Asymptotic Complexity / Large Integer Multiplication"},{"url":"#september-26-matrix-multiplication","title":"September 26: Matrix Multiplication"}]},{"url":"#w05-divide--conquer","title":"W05: Divide & Conquer","items":[{"url":"#september-30-quick-sort","title":"September 30: Quick Sort"},{"url":"#october-03-national-foundation-day","title":"October 03: National Foundation Day"}]},{"url":"#w06-dynamic-programming","title":"W06: Dynamic Programming","items":[{"url":"#october-07-dynamic-programming-basics--binomial-coefficient","title":"October 07: Dynamic Programming Basics / Binomial Coefficient"},{"url":"#october-10-matrix-chain-multiplication","title":"October 10: Matrix-Chain Multiplication"}]},{"url":"#w07-dynamic-programming","title":"W07: Dynamic Programming","items":[{"url":"#october-14-all-pairs-shortest-path-problem","title":"October 14: All-Pairs Shortest Path Problem"},{"url":"#october-17-knapsack-problem--traveling-salesman-problem","title":"October 17: Knapsack Problem / Traveling Salesman Problem"}]},{"url":"#w08-midterm-exam","title":"W08: Midterm Exam","items":[{"url":"#october-21","title":"October 21"},{"url":"#october-24-midterm-exam","title":"October 24: Midterm Exam"}]},{"url":"#w09-greedy-algorithm","title":"W09: Greedy Algorithm","items":[{"url":"#october-28-midterm-exam-explanation","title":"October 28: Midterm Exam Explanation"},{"url":"#october-31-greedy-algorithm-basics--single-source-shortest-path-problem","title":"October 31: Greedy Algorithm Basics / Single-Source Shortest Path Problem"}]},{"url":"#w10-greedy-algorithm","title":"W10: Greedy Algorithm","items":[{"url":"#november-04-prims-minimum-spanning-tree","title":"November 04: Prim's Minimum Spanning Tree"},{"url":"#november-07-kruskals-minimum-spanning-tree","title":"November 07: Kruskal's Minimum Spanning Tree"}]},{"url":"#w11-greedy-algorithm--backtracking","title":"W11: Greedy Algorithm / Backtracking","items":[{"url":"#november-11-huffman-code","title":"November 11: Huffman Code"},{"url":"#november-14-backtracking-basics--n-queen-problem","title":"November 14: Backtracking Basics / n-Queen Problem"}]},{"url":"#w12-backtracking","title":"W12: Backtracking","items":[{"url":"#november-18-monte-carlo-method--graph-coloring","title":"November 18: Monte Carlo Method / Graph Coloring"},{"url":"#november-21-knapsack-problem","title":"November 21: Knapsack Problem"}]},{"url":"#w13-backtracking--branch-and-bound","title":"W13: Backtracking / Branch-and-Bound","items":[{"url":"#november-25-traveling-salesman-problem","title":"November 25: Traveling Salesman Problem"},{"url":"#november-28-branch-and-bound-basics--knapsack-problem","title":"November 28: Branch-and-Bound Basics / Knapsack Problem"}]},{"url":"#w14-branch-and-bound--np-theory","title":"W14: Branch-and-Bound / NP-Theory","items":[{"url":"#december-02-traveling-salesman-problem--abductive-inference","title":"December 02: Traveling Salesman Problem / Abductive Inference"},{"url":"#december-05-np-theory-basics","title":"December 05: NP Theory Basics"}]},{"url":"#w15-np-theory--evolutionary-computation","title":"W15: NP Theory / Evolutionary Computation","items":[{"url":"#december-09-np-problems","title":"December 09: NP Problems"},{"url":"#december-12-evolutionary-computation","title":"December 12: Evolutionary Computation"}]},{"url":"#w16-final-term-exam","title":"W16: Final Term Exam","items":[{"url":"#december-16-final-term-exam","title":"December 16: Final Term Exam"},{"url":"#december-19-final-term-exam-explanation","title":"December 19: Final Term Exam Explanation"}]}]}]}}},"pageContext":{"id":"a9e4bbfb-3451-5a1d-8899-359f9a575624","frontmatter":{"code":"4471016","title":"알고리즘 / Algorithms","year":2024,"semester":"fall","division":"3분반","description":"This course introduces fundamental concepts and theories to design and analyze computer algorithms that are widely employed in computer science. Throughout the course, we will cover divide-and-conquer, dynamic programming, greedy algorithms, backtracking, branch-and-bound, genetic algorithms, and NP theory."}}},"staticQueryHashes":["3751811173","892254660"],"slicesMap":{}}