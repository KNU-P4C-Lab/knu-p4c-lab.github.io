{"version":3,"file":"component---src-pages-publications-tsx-a64ecd0d68f949a98815.js","mappings":"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","sources":["webpack://p4c-lab/./src/pages/publications.tsx","webpack://p4c-lab/./src/components/link-button.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport {graphql, PageProps} from \"gatsby\";\r\nimport Seo from \"../components/seo\";\r\nimport Layout from \"../components/layout\";\r\nimport {Modal, ModalBody} from \"flowbite-react\";\r\nimport {H6, Span, P, TextLink, A} from \"../components/typography\";\r\nimport {FaArrowRight} from \"react-icons/fa6\";\r\nimport LinkButton from \"../components/link-button\";\r\n\r\nconst PUB_TYPES = ['all', 'journal', 'conference', 'poster', 'patent']\r\n\r\nconst PublicationItem = ({\r\n                             type,\r\n                             title,\r\n                             date,\r\n                             authors,\r\n                             words,\r\n                             sitePath,\r\n                             publisher,\r\n                             abbrev,\r\n                             volume,\r\n                             issue,\r\n                             pages,\r\n                             doi,\r\n                             year\r\n                         }: {\r\n    type: string,\r\n    title: string,\r\n    date: string,\r\n    words: number,\r\n    sitePath: string,\r\n    authors?: readonly (string | null)[] | null\r\n    publisher?: string | null,\r\n    abbrev?: string | null,\r\n    volume?: number | string | null,\r\n    issue?: number | string | null,\r\n    pages?: string | null,\r\n    doi?: string | null,\r\n    year?: string | number | null\r\n\r\n}) => {\r\n    const pubAbbrev = publisher && abbrev ? `${publisher} (${abbrev})` : publisher\r\n    const volIssue = volume && issue ? `${volume} (${issue})` : volume\r\n    const pubLine = [pubAbbrev, volIssue, pages].filter(p => p !== undefined && p !== null).join(', ')\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const bibKey = `${authors ? (authors[0]?.replaceAll(/\\s/g, '') || '') : ''}${year || ''}${title.split(' ')[0]}`.toLowerCase().replaceAll(\r\n        /[^\\w\\s]/g, ''\r\n    )\r\n    let bibType = ''\r\n    const bibItems: Record<string, any> = {\r\n        author: authors?.join(' AND '),\r\n        title: title,\r\n        volume: volume,\r\n        number: issue,\r\n        series: abbrev,\r\n        pages: pages,\r\n        doi: doi,\r\n        year: year,\r\n    }\r\n    switch (type) {\r\n        case 'journal':\r\n            bibItems['journal'] = publisher\r\n            bibType = 'article'\r\n            break\r\n        case 'conference':\r\n        case 'poster':\r\n            bibItems['booktitle'] = publisher\r\n            bibType = 'inproceedings'\r\n            break\r\n        case 'book':\r\n            bibType = 'book'\r\n            break\r\n        case 'patent':\r\n        case 'misc':\r\n            bibItems['note'] = publisher\r\n            bibType = 'misc'\r\n            break\r\n    }\r\n    const bibItemsString = Object.entries(bibItems).filter(\r\n        (entry) => entry[1] !== null && entry[1] !== undefined\r\n    ).map(\r\n        (entry) => `\\t${entry[0]} = \\{${entry[1]}\\}`\r\n    ).join(',\\n')\r\n\r\n    const bibTex = `@${bibType}\\{${bibKey},\\n${bibItemsString}\\n\\}`\r\n\r\n    return (\r\n        <>\r\n            <Modal popup show={openModal} onClose={() => setOpenModal(false)}>\r\n                <Modal.Header/>\r\n                <ModalBody>\r\n                    <P className='whitespace-pre-wrap text-sm font-mono text-gray-900'>{bibTex}</P>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n            <div className=\"flex flex-col items-start text-sm font-serif space-y-2\">\r\n                <Span className='font-serif leading-none text-gray-400 dark:text-gray-500'>{date}</Span>\r\n                <H6 className='capitalize items-center font-sans'>\r\n                    {title}\r\n                    <button onClick={() => setOpenModal(true)}><TextLink className='text-sm ml-1'>[BIB]</TextLink>\r\n                    </button>\r\n                </H6>\r\n                {authors &&\r\n                    <Span className='leading-1'>{authors.join(', ')} </Span>\r\n                }\r\n                {\r\n                    publisher &&\r\n                    <Span className='italic'>\r\n                        {pubLine}\r\n                    </Span>\r\n                }\r\n                {doi &&\r\n                    <A href={`https://doi.org/${doi}`} className='font-serif'>DOI: {doi}</A>\r\n                }\r\n                {words > 0 &&\r\n                    <LinkButton to={sitePath}>\r\n                        Read More\r\n                        <FaArrowRight className='ml-2 h-3 w-3'/>\r\n                    </LinkButton>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Publications = ({data}: PageProps<Queries.PublicationPageQuery>) => {\r\n    const {publications} = data\r\n    const [tab, setTab] = useState('all')\r\n\r\n    return (\r\n        <Layout activeLink='publications'>\r\n            <div>\r\n                <div className='sm:hidden'>\r\n                    <select className='capitalize bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500'\r\n                            onChange={(e) => setTab(e.target.value)}\r\n                            defaultValue={'all'}\r\n                            value={tab}\r\n                    >\r\n                        {\r\n                            PUB_TYPES.map(p => <option className='capitalize'>{p}</option>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <ul className=\"text-base font-medium text-center text-gray-500 hidden sm:flex border-b border-gray-200 dark:text-gray-400 dark:border-gray-700\">\r\n                    {\r\n                        PUB_TYPES.map(p =>\r\n                            <li className=\"w-full\">\r\n                                <button onClick={(e) => setTab(e.currentTarget.id)}\r\n                                        id={p}\r\n                                        className={\r\n                                            tab === p ?\r\n                                                'capitalize inline-block w-full p-4 text-blue-600 border-b-2 border-blue-600 rounded-t-lg active dark:text-primary-100 dark:border-primary-100' :\r\n                                                'capitalize inline-block w-full p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300'\r\n                                        }\r\n                                >{p}</button>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <ul className='mt-12 space-y-8'>\r\n                    {\r\n                        publications.nodes.filter(node =>\r\n                            tab === 'all' ? true : node.frontmatter?.type === tab\r\n                        ).map(node =>\r\n                            <li>\r\n                                <PublicationItem\r\n                                    type={node.frontmatter?.type || 'misc'}\r\n                                    title={node.frontmatter?.title || ''}\r\n                                    date={node.frontmatter?.date || ''}\r\n                                    authors={node.frontmatter?.authors}\r\n                                    words={node.fields?.timeToRead?.words || 0}\r\n                                    sitePath={node.fields?.sitePath || ''}\r\n                                    publisher={node.frontmatter?.publisher}\r\n                                    abbrev={node.frontmatter?.abbrev}\r\n                                    volume={node.frontmatter?.volume}\r\n                                    issue={node.frontmatter?.issue}\r\n                                    pages={node.frontmatter?.pages}\r\n                                    doi={node.frontmatter?.doi}\r\n                                    year={node.frontmatter?.year}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport const Head = () => <Seo title='Publications'/>\r\n\r\nexport const pageQuery = graphql`\r\n    query PublicationPage {\r\n        publications: allMdx(\r\n            filter: {\r\n                fields: {\r\n                    postType: {\r\n                        eq: \"publications\"\r\n                    }\r\n                }\r\n            }\r\n            sort: {\r\n                frontmatter: {\r\n                    date: DESC\r\n                }\r\n            }\r\n        ) {\r\n            nodes {\r\n                fields {\r\n                    sitePath\r\n                    timeToRead {\r\n                        words\r\n                    }\r\n                }\r\n                frontmatter {\r\n                    title\r\n                    date(formatString: \"MMMM Do, YYYY\")\r\n                    type\r\n                    authors\r\n                    publisher\r\n                    abbrev\r\n                    volume\r\n                    issue\r\n                    pages\r\n                    doi\r\n                    year: date(formatString: \"YYYY\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default Publications","import {Link} from \"gatsby\";\r\nimport * as React from \"react\";\r\n\r\nconst LinkButton = ({to, children}: { to: string, children?: React.ReactNode }) =>\r\n    <button\r\n        className={`group flex items-center justify-center\r\n                    p-0.5 text-center font-medium relative focus:z-10 focus:outline-none text-gray-900 bg-white border \r\n                    border-gray-200 enabled:hover:bg-gray-100\r\n                    enabled:hover:text-cyan-700 :ring-cyan-700 focus:text-cyan-700 dark:bg-transparent \r\n                    dark:text-gray-400 dark:border-gray-600 dark:enabled:hover:text-white dark:enabled:hover:bg-gray-700 rounded-lg focus:ring-2`\r\n        }>\r\n        <Link to={to}>\r\n            <span\r\n                className='flex items-center transition-all duration-200 rounded-md text-sm px-4 py-2 font-sans'>\r\n                {children}\r\n            </span>\r\n        </Link>\r\n    </button>\r\n\r\nexport default LinkButton\r\n"],"names":["PUB_TYPES","PublicationItem","_ref","type","title","date","authors","words","sitePath","publisher","abbrev","volume","issue","pages","doi","year","pubLine","filter","p","join","openModal","setOpenModal","useState","bibKey","_authors$","replaceAll","split","toLowerCase","bibType","bibItems","author","number","series","bibTex","Object","entries","entry","undefined","map","React","Modal","popup","show","onClose","Header","ModalBody","P","className","Span","H6","onClick","TextLink","A","href","LinkButton","to","FaArrowRight","Head","Seo","_ref2","data","publications","tab","setTab","Layout","activeLink","onChange","e","target","value","defaultValue","currentTarget","id","nodes","node","frontmatter","_node$frontmatter","_node$frontmatter2","_node$frontmatter3","_node$frontmatter4","_node$frontmatter5","fields","_node$fields","timeToRead","_node$fields$timeToRe","_node$fields2","_node$frontmatter6","_node$frontmatter7","_node$frontmatter8","_node$frontmatter9","_node$frontmatter10","_node$frontmatter11","_node$frontmatter12","children","Link"],"sourceRoot":""}