{"version":3,"file":"component---src-pages-news-tsx-615ca9b006878305cd35.js","mappings":"kNAiBA,MA8BaA,EAAOA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,sBAmCrC,UAjEaC,IAA8C,IAA7C,KAACC,GAAuCD,EAClD,MAAM,KAACE,GAAQD,EAEf,OACIJ,EAAAA,cAACM,EAAAA,EAAM,CAACC,WAAW,QACfP,EAAAA,cAACQ,EAAAA,GAAQ,KACJH,EAAKI,MAAMC,IAAIC,IAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAChBjB,EAAAA,cAACkB,EAAAA,GAAY,KACTlB,EAAAA,cAACmB,EAAAA,GAAa,CAACC,KAAMC,EAAAA,MACrBrB,EAAAA,cAACsB,EAAAA,GAAe,CAACC,UAAU,cACvBvB,EAAAA,cAACwB,EAAAA,GAAY,KAAkB,QAAlBZ,EAAED,EAAKc,mBAAW,IAAAb,OAAA,EAAhBA,EAAkBc,UACjC1B,EAAAA,cAAC2B,EAAAA,GAAa,CAACJ,UAAU,qBAAqC,QAAlBV,EAAEF,EAAKc,mBAAW,IAAAZ,OAAA,EAAhBA,EAAkBX,OAChEF,EAAAA,cAAC4B,EAAAA,GAAY,KAAEjB,EAAKkB,aAIH,QAAXf,EAAAH,EAAKmB,cAAM,IAAAhB,GAAY,QAAZC,EAAXD,EAAaiB,kBAAU,IAAAhB,OAAZ,EAAXA,EAAyBiB,QAAS,GAAK,KACV,IAAd,QAAhBhB,EAAAL,EAAKc,mBAAW,IAAAT,OAAA,EAAhBA,EAAkBiB,YAEvBjC,EAAAA,cAACkC,EAAAA,EAAU,CAACC,GAAe,QAAblB,EAAEN,EAAKmB,cAAM,IAAAb,OAAA,EAAXA,EAAamB,UAAY,YAErCpC,EAAAA,cAACqC,EAAAA,IAAY,CAACd,UAAU,uB,+CCnBxD,IAhBmBpB,IAAA,IAAC,GAACgC,EAAE,SAAEG,GAAqDnC,EAAA,OAC1EH,EAAAA,cAAA,UACIuB,UAAW,6dAMXvB,EAAAA,cAACuC,EAAAA,KAAI,CAACJ,GAAIA,GACNnC,EAAAA,cAAA,QACIuB,UAAU,wFACTe,K","sources":["webpack://p4c-lab/./src/pages/news.tsx","webpack://p4c-lab/./src/components/link-button.tsx"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    Timeline,\r\n    TimelineBody,\r\n    TimelineContent,\r\n    TimelineItem,\r\n    TimelinePoint,\r\n    TimelineTime,\r\n    TimelineTitle\r\n} from \"flowbite-react\";\r\nimport {FaArrowRight, FaCalendar} from \"react-icons/fa6\";\r\nimport LinkButton from \"../components/link-button\";\r\nimport {graphql, PageProps} from \"gatsby\";\r\nimport Seo from \"../components/seo\";\r\nimport Layout from \"../components/layout\";\r\n\r\n\r\nconst News = ({data}: PageProps<Queries.NewsPageQuery>) => {\r\n    const {news} = data\r\n\r\n    return (\r\n        <Layout activeLink='News'>\r\n            <Timeline>\r\n                {news.nodes.map(node =>\r\n                    <TimelineItem>\r\n                        <TimelinePoint icon={FaCalendar}/>\r\n                        <TimelineContent className='font-serif'>\r\n                            <TimelineTime>{node.frontmatter?.dateTime}</TimelineTime>\r\n                            <TimelineTitle className='font-sans text-xl'>{node.frontmatter?.title}</TimelineTitle>\r\n                            <TimelineBody>{node.excerpt}</TimelineBody>\r\n                        </TimelineContent>\r\n                        {\r\n                            (\r\n                                ((node.fields?.timeToRead?.words || 0) > 150) ||\r\n                                (node.frontmatter?.readMore == true)\r\n                            ) &&\r\n                            <LinkButton to={node.fields?.sitePath!!}>\r\n                                Read More\r\n                                <FaArrowRight className='ml-2 h-3 w-3'/>\r\n                            </LinkButton>\r\n                        }\r\n                    </TimelineItem>\r\n                )}\r\n            </Timeline>\r\n        </Layout>\r\n    )\r\n}\r\nexport const Head = () => <Seo title='News & Activities'/>\r\n\r\nexport const pageQuery = graphql`\r\n    query NewsPage {\r\n        news: allMdx(\r\n            filter: {\r\n                fields: {\r\n                    postType: {\r\n                        eq: \"news\"\r\n                    }\r\n                }\r\n            }\r\n            sort: {\r\n                frontmatter: {\r\n                    dateTime: DESC\r\n                }\r\n            }\r\n        ) {\r\n            nodes {\r\n                frontmatter {\r\n                    title\r\n                    dateTime(formatString: \"hh:mm A, MMM Do, YYYY\")\r\n                    readMore\r\n                }\r\n                excerpt(pruneLength: 300)\r\n                fields {\r\n                    sitePath\r\n                    timeToRead {\r\n                        words\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }`\r\n\r\nexport default News\r\n\r\n\r\n\r\n\r\n","import {Link} from \"gatsby\";\r\nimport * as React from \"react\";\r\n\r\nconst LinkButton = ({to, children}: { to: string, children?: React.ReactNode }) =>\r\n    <button\r\n        className={`group flex items-center justify-center\r\n                    p-0.5 text-center font-medium relative focus:z-10 focus:outline-none text-gray-900 bg-white border \r\n                    border-gray-200 enabled:hover:bg-gray-100\r\n                    enabled:hover:text-cyan-700 :ring-cyan-700 focus:text-cyan-700 dark:bg-transparent \r\n                    dark:text-gray-400 dark:border-gray-600 dark:enabled:hover:text-white dark:enabled:hover:bg-gray-700 rounded-lg focus:ring-2`\r\n        }>\r\n        <Link to={to}>\r\n            <span\r\n                className='flex items-center transition-all duration-200 rounded-md text-sm px-4 py-2 font-sans'>\r\n                {children}\r\n            </span>\r\n        </Link>\r\n    </button>\r\n\r\nexport default LinkButton\r\n"],"names":["Head","React","Seo","title","_ref","data","news","Layout","activeLink","Timeline","nodes","map","node","_node$frontmatter","_node$frontmatter2","_node$fields","_node$fields$timeToRe","_node$frontmatter3","_node$fields2","TimelineItem","TimelinePoint","icon","FaCalendar","TimelineContent","className","TimelineTime","frontmatter","dateTime","TimelineTitle","TimelineBody","excerpt","fields","timeToRead","words","readMore","LinkButton","to","sitePath","FaArrowRight","children","Link"],"sourceRoot":""}