{"version":3,"file":"component---src-components-news-template-tsx-content-file-path-posts-news-2024-04-26-cscw-md-a66c4541130b97c636cd.js","mappings":"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","sources":["webpack://p4c-lab/./posts/news/2024-04-26-CSCW.md","webpack://p4c-lab/./src/components/news-template.tsx","webpack://p4c-lab/./src/components/mdx-template.tsx","webpack://p4c-lab/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"The project \", React.createElement(_components.em, null, \"Future Smart Home\"), \" has come to fruition. Collaborating with the Interactive Computing Lab at KAIST, we published a paper titled \\\"FamilyScope: Visualizing Affective Aspects of Family Social Interactions using Passive Sensor Data\\\" in Proceedings of the ACM on Human-Computer Interaction. In addition, this paper will be presented at the ACM Conference on Computer-Supported Cooperative Work and Social Computing (CSCW) '24.\"), \"\\n\", React.createElement(_components.p, null, \"In this work, we explore family informatics using wearable sensor data to allow family members to reflect their members' affective aspects during the family's social activities. For this, we implemented FamilyScope, which visualizes affective and behavioral elements from wearable sensor readings, and conducted a user study with ten families (n = 30) in a smart home testbed. Our findings indicate that such a family informatics tool helps family members understand other member's affective and behavioral responses during family social interaction and gain new insights about each other.\"), \"\\n\", React.createElement(_components.p, null, \"Please see the paper if you are interested in more details about this work: \", React.createElement(_components.a, {\n    href: \"https://dl.acm.org/doi/10.1145/3637334\",\n    target: \"_blank\",\n    rel: \"nofollow noopener noreferrer\"\n  }, \"Link\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/Projects/knu-p4c-lab.github.io/posts/news/2024-04-26-CSCW.md\";\nimport React from \"react\";\nimport Seo from \"./seo\";\nimport Layout from \"./layout\";\nimport {H2, Span} from \"./typography\";\nimport MdxTemplate from \"./mdx-template\";\nconst NewsTemplate = _ref => {\n  var _news$frontmatter, _news$frontmatter2;\n  let {data, children} = _ref;\n  const {news} = data;\n  return React.createElement(Layout, {\n    activeLink: \"news\"\n  }, React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"flex flex-col space-y-2 text-base font-serif mb-6\"\n  }, React.createElement(Span, {\n    className: \"leading-none text-gray-400 dark:text-gray-500\"\n  }, news === null || news === void 0 ? void 0 : (_news$frontmatter = news.frontmatter) === null || _news$frontmatter === void 0 ? void 0 : _news$frontmatter.dateTime), React.createElement(H2, {\n    className: \"font-sans\"\n  }, news === null || news === void 0 ? void 0 : (_news$frontmatter2 = news.frontmatter) === null || _news$frontmatter2 === void 0 ? void 0 : _news$frontmatter2.title)), React.createElement(MdxTemplate, null, children)));\n};\nconst pageQuery = \"450556150\";\nexport const Head = _ref2 => {\n  var _data$news, _data$news$frontmatte;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: `News - ${(_data$news = data.news) === null || _data$news === void 0 ? void 0 : (_data$news$frontmatte = _data$news.frontmatter) === null || _data$news$frontmatte === void 0 ? void 0 : _data$news$frontmatte.title}`\n  });\n};\nNewsTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(NewsTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from 'react'\r\nimport {MDXProvider} from \"@mdx-js/react\";\r\nimport {A, H4, H5, H6, P} from \"./typography\";\r\n\r\nconst MdxTemplate = ({children} : {children: React.ReactNode})  => {\r\n    const component = {\r\n        h1: (props: object) => <H4 className='mt-12 mb-1 first:mt-0' {...props}/>,\r\n        h2: (props: object) => <H5 className='mt-4 mb-1' {...props}/>,\r\n        h3: (props: object) => <H6 className='mt-2 mb-1' {...props}/>,\r\n        p: (props: object) => <P className='mt-0 mb-2' {...props}/>,\r\n        ul: (props: object) => <ul className='my-0 list-outside list-disc text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        ol: (props: object) => <ol className='my-0 list-outside list-decimal text-md text-gray-500 font-serif dark:text-gray-400' {...props}/>,\r\n        li: (props: object) => <li className='my-0' {...props}/>,\r\n        a: (props: object) => <A {...props}/>,\r\n        pre: (props: object) => <pre className='p-0' {...props}/>,\r\n        table: (props: object) => <table className='font-medium text-md font-serif' {...props}/>\r\n    }\r\n\r\n    return (\r\n        <article className='max-w-full dark:format-invert format'>\r\n            <MDXProvider components={component}>{children}</MDXProvider>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default MdxTemplate","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","a","_provideComponents","components","React","href","target","rel","wrapper","MDXLayout","NewsTemplate","_ref","_news$frontmatter","_news$frontmatter2","data","children","news","Layout","activeLink","className","Span","frontmatter","dateTime","H2","title","MdxTemplate","Head","_ref2","_data$news","_data$news$frontmatte","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","component","h1","H4","h2","H5","h3","H6","P","ul","ol","li","A","pre","table","MDXProvider","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}